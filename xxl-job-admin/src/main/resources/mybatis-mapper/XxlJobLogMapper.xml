<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xxl.job.admin.dao.XxlJobLogDao">
	
	<resultMap id="XxlJobLog" type="com.xxl.job.admin.core.model.XxlJobLog" >
		<result column="id" property="id" />

		<result column="job_group" property="jobGroup" />
		<result column="job_id" property="jobId" />

		<result column="executor_address" property="executorAddress" />
		<result column="executor_handler" property="executorHandler" />
	    <result column="executor_param" property="executorParam" />
		<result column="executor_sharding_param" property="executorShardingParam" />
		<result column="executor_fail_retry_count" property="executorFailRetryCount" />
	    
	    <result column="trigger_time" property="triggerTime" />
	    <result column="trigger_code" property="triggerCode" />
	    <result column="trigger_msg" property="triggerMsg" />
	    
	    <result column="handle_time" property="handleTime" />
	    <result column="handle_code" property="handleCode" />
	    <result column="handle_msg" property="handleMsg" />

		<result column="alarm_status" property="alarmStatus" />
	</resultMap>

	<sql id="Base_Column_List">
		t.id as "id",
		t.job_group as "job_group",
		t.job_id as "job_id",
		t.executor_address as "executor_address",
		t.executor_handler as "executor_handler",
		t.executor_param as "executor_param",
		t.executor_sharding_param as "executor_sharding_param",
		t.executor_fail_retry_count as "executor_fail_retry_count",
		t.trigger_time as "trigger_time",
		t.trigger_code as "trigger_code",
		t.trigger_msg as "trigger_msg",
		t.handle_time as "handle_time",
		t.handle_code as "handle_code",
		t.handle_msg as "handle_msg",
		t.alarm_status as "alarm_status"
	</sql>
	
	<select id="pageList" resultMap="XxlJobLog">
		SELECT * from (
		select b.*,rownum rnum from (
		SELECT <include refid="Base_Column_List" />
		FROM xxl_job_log t
		<trim prefix="WHERE" prefixOverrides="AND | OR" >
			<if test="jobId==0 and jobGroup gt 0">
				AND t.job_group = #{jobGroup}
			</if>
			<if test="jobId gt 0">
				AND t.job_id = #{jobId}
			</if>
			<if test="triggerTimeStart != null">
				AND t.trigger_time <![CDATA[ >= ]]> #{triggerTimeStart}
			</if>
			<if test="triggerTimeEnd != null">
				AND t.trigger_time <![CDATA[ <= ]]> #{triggerTimeEnd}
			</if>
			<if test="logStatus == 1" >
				AND t.handle_code = 200
			</if>
			<if test="logStatus == 2" >
				AND (
					t.trigger_code NOT IN (0, 200) OR
					t.handle_code NOT IN (0, 200)
				)
			</if>
			<if test="logStatus == 3" >
				AND t.trigger_code = 200
				AND t.handle_code = 0
			</if>
		</trim>
		ORDER BY t.trigger_time DESC
		) b where rownum &lt;= #{pagesize}+#{offset}
		) a	where rnum &gt;=#{offset}
				
	</select>
	
	<select id="pageListCount" resultType="int">
		SELECT count(1)
		FROM xxl_job_log t
		<trim prefix="WHERE" prefixOverrides="AND | OR" >
			<if test="jobId==0 and jobGroup gt 0">
				AND t.job_group = #{jobGroup}
			</if>
			<if test="jobId gt 0">
				AND t.job_id = #{jobId}
			</if>
			<if test="triggerTimeStart != null">
				AND t.trigger_time <![CDATA[ >= ]]> #{triggerTimeStart}
			</if>
			<if test="triggerTimeEnd != null">
				AND t.trigger_time <![CDATA[ <= ]]> #{triggerTimeEnd}
			</if>
			<if test="logStatus == 1" >
				AND t.handle_code = 200
			</if>
			<if test="logStatus == 2" >
				AND (
					t.trigger_code NOT IN (0, 200) OR
					t.handle_code NOT IN (0, 200)
				)
			</if>
			<if test="logStatus == 3" >
				AND t.trigger_code = 200
				AND t.handle_code = 0
			</if>
		</trim>
	</select>
	
	<select id="load" parameterType="java.lang.Integer" resultMap="XxlJobLog">
		SELECT <include refid="Base_Column_List" />
		FROM xxl_job_log t
		WHERE t.id = #{id}
		ORDER BY t.trigger_time DESC
	</select>

	
	<insert id="save" parameterType="com.xxl.job.admin.core.model.XxlJobLog" useGeneratedKeys="true" keyProperty="id" >
		<selectKey resultType="int"  keyProperty="id" order="BEFORE">
		  SELECT xxl_job_log_id.nextval FROM DUAL
		</selectKey>
		INSERT INTO xxl_job_log (id,
			job_group,
			job_id,
			trigger_time,
			trigger_code,
			handle_code
		) VALUES (#{id},
			#{jobGroup},
			#{jobId},
			#{triggerTime},
			#{triggerCode},
			#{handleCode}
		)
		<!--<selectKey resultType="java.lang.Integer" order="AFTER" keyProperty="id">
			SELECT LAST_INSERT_ID() 
		</selectKey>-->
	</insert>

	<update id="updateTriggerInfo" >
		UPDATE xxl_job_log
		SET
			trigger_time= #{triggerTime},
			trigger_code= #{triggerCode},
			trigger_msg= #{triggerMsg,jdbcType=VARCHAR},
			executor_address= #{executorAddress,jdbcType=VARCHAR},
			executor_handler=#{executorHandler,jdbcType=VARCHAR},
			executor_param= #{executorParam,jdbcType=VARCHAR},
			executor_sharding_param= #{executorShardingParam,jdbcType=VARCHAR},
			executor_fail_retry_count= #{executorFailRetryCount}
		WHERE id= #{id}
	</update>

	<update id="updateHandleInfo">
		UPDATE xxl_job_log
		SET 
			handle_time= #{handleTime}, 
			handle_code= #{handleCode},
			handle_msg= #{handleMsg,jdbcType=VARCHAR} 
		WHERE id= #{id}
	</update>
	
	<delete id="delete" >
		delete from xxl_job_log
		WHERE job_id = #{jobId}
	</delete>

	<select id="triggerCountByHandleCode" resultType="int" >
		SELECT count(1)
		FROM xxl_job_log t
		<trim prefix="WHERE" prefixOverrides="AND | OR" >
			<if test="handleCode gt 0">
				AND t.handle_code = #{handleCode}
			</if>
		</trim>
	</select>

    <select id="triggerCountByDay" resultType="java.util.Map" >
		SELECT
			to_char(trigger_time,'yyyy-mm-dd') as "triggerDay",
			COUNT(handle_code) as "triggerDayCount",
			SUM(CASE WHEN (trigger_code in (0, 200) and handle_code = 0) then 1 else 0 end) as "triggerDayCountRunning",
			SUM(CASE WHEN handle_code = 200 then 1 else 0 end) as "triggerDayCountSuc"
		FROM xxl_job_log
		WHERE trigger_time BETWEEN #{from} and #{to}
		GROUP BY to_char(trigger_time,'yyyy-mm-dd') 
		ORDER BY to_char(trigger_time,'yyyy-mm-dd') 
    </select>

	<delete id="clearLog" >
		delete from xxl_job_log
		<trim prefix="WHERE" prefixOverrides="AND | OR" >
			<if test="jobGroup gt 0">
				AND job_group = #{jobGroup}
			</if>
			<if test="jobId gt 0">
				AND job_id = #{jobId}
			</if>
			<if test="clearBeforeTime != null">
				AND trigger_time <![CDATA[ <= ]]> #{clearBeforeTime}
			</if>
			<if test="clearBeforeNum gt 0">
				AND id NOT in(
					SELECT id FROM(
						SELECT id FROM xxl_job_log t
						<trim prefix="WHERE" prefixOverrides="AND | OR" >
							<if test="jobGroup gt 0">
								AND t.job_group = #{jobGroup}
							</if>
							<if test="jobId gt 0">
								AND t.job_id = #{jobId}
							</if>
							<if test="1 == 1">
								rownum BETWEEN 0 AND #{clearBeforeNum}
							</if>
							
						</trim>
						ORDER BY t.trigger_time desc
					) t1
				)
			</if>
		</trim>
	</delete>

	<select id="findFailJobLogIds" resultType="int" >
		SELECT id as "id" FROM xxl_job_log
		WHERE not(
			(trigger_code in (0, 200) and handle_code = 0)
			OR
			(handle_code = 200)
		)
		AND alarm_status = 0
		ORDER BY id ASC
	</select>

	<update id="updateAlarmStatus" >
		UPDATE xxl_job_log
		SET
			alarm_status = #{newAlarmStatus}
		WHERE id= #{logId} AND alarm_status = #{oldAlarmStatus}
	</update>
	
</mapper>